
Note the following instances of namespace strings that Kustomize won't replace
=============================================================================

  kind: Role
  name: test-nodeport-tls-redpanda
subjects:
- kind: ServiceAccount
  name: test-nodeport-tls-redpanda
  namespace: unhelm-namespace-placeholder
---
apiVersion: v1
data:
  bootstrap.yaml: |
    kafka_enable_authorization: false
--
        key_file: /etc/tls/certs/default/tls.key
        require_client_auth: false
        truststore_file: /etc/tls/certs/default/ca.crt
      seed_servers:
        - host:
            address: redpanda-0.redpanda.unhelm-namespace-placeholder.svc.cluster.local.
            port: 33145
        - host:
            address: redpanda-1.redpanda.unhelm-namespace-placeholder.svc.cluster.local.
            port: 33145
        - host:
            address: redpanda-2.redpanda.unhelm-namespace-placeholder.svc.cluster.local.
            port: 33145
    schema_registry:
      schema_registry_api:
        - name: internal
          address: 0.0.0.0
--
data:
  config.yaml: |
    # from .Values.console.config
    kafka:
      brokers:
      - redpanda-0.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9093
      - redpanda-1.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9093
      - redpanda-2.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9093
      sasl:
        enabled: false
      schemaRegistry:
        enabled: true
        tls:
          enabled: true
        urls:
        - https://redpanda-0.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8081
        - https://redpanda-1.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8081
        - https://redpanda-2.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8081
      tls:
        enabled: true
kind: ConfigMap
metadata:
  labels:
--
    #!/usr/bin/env bash
    set -e

    ready_result_exit_code=1
    while [[ ${ready_result_exit_code} -ne 0 ]]; do
      ready_result=$(rpk cluster health --api-urls redpanda-0.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644,redpanda-1.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644,redpanda-2.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644 --admin-api-tls-enabled --admin-api-tls-truststore /etc/tls/certs/default/ca.crt | grep 'Healthy:.*true' 2>&1) && ready_result_exit_code=$?
      sleep 2
    done

    while true; do
      sleep infinity
--
stringData:
  common.sh: |-
    #!/usr/bin/env bash

    # the SERVICE_NAME comes from the metadata.name of the pod, essentially the POD_NAME
    CURL_URL="https://${SERVICE_NAME}.redpanda.unhelm-namespace-placeholder.svc.cluster.local:9644"

    # commands used throughout
    CURL_NODE_ID_CMD="curl --silent --fail --cacert /etc/tls/certs/default/tls.crt ${CURL_URL}/v1/node_config"

    CURL_MAINTENANCE_DELETE_CMD_PREFIX='curl -X DELETE --silent -o /dev/null -w "%{http_code}"'
--
        - name: REDPANDA_ADMINAPI_TLS_CAFILEPATH
          value: /mnt/cert/adminapi/default/ca.crt
        - name: REDPANDA_ADMINAPI_ENABLED
          value: "true"
        - name: REDPANDA_ADMINAPI_URLS
          value: https://redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644
        image: docker.redpanda.com/redpandadata/console:v2.2.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
--
        - start
        - --smp=1
        - --memory=2048M
        - --reserve-memory=205M
        - --default-log-level=info
        - --advertise-rpc-addr=$(SERVICE_NAME).redpanda.unhelm-namespace-placeholder.svc.cluster.local.:33145
        env:
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
--
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - curl --silent --fail -k --cacert /etc/tls/certs/default/tls.crt "https://${SERVICE_NAME}.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644/v1/status/ready"
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
        name: redpanda
        ports:
--
            command:
            - /bin/sh
            - -c
            - |
              set -x
              rpk cluster health --api-urls ${SERVICE_NAME}.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644 --admin-api-tls-enabled --admin-api-tls-truststore /etc/tls/certs/default/ca.crt
              rpk cluster health --api-urls ${SERVICE_NAME}.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644 --admin-api-tls-enabled --admin-api-tls-truststore /etc/tls/certs/default/ca.crt | grep 'Healthy:.*true'
          failureThreshold: 3
          initialDelaySeconds: 1
          periodSeconds: 10
          successThreshold: 1
        resources:
--
            command:
            - /bin/sh
            - -c
            - |
              set -e
              RESULT=$(curl --silent --fail -k --cacert /etc/tls/certs/default/tls.crt "https://${SERVICE_NAME}.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644/v1/status/ready")
              echo $RESULT
              echo $RESULT | grep ready
          failureThreshold: 120
          initialDelaySeconds: 1
          periodSeconds: 10
--
        - name: SERVICE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: ADVERTISED_KAFKA_ADDRESSES
          value: '{"address":"$(SERVICE_NAME).redpanda.unhelm-namespace-placeholder.svc.cluster.local.","name":"internal","port":9093};{"address":"$(SERVICE_NAME)","name":"default","port":31092}
            {"address":"$(SERVICE_NAME).redpanda.unhelm-namespace-placeholder.svc.cluster.local.","name":"internal","port":9093};{"address":"$(SERVICE_NAME)","name":"default","port":31092}
            {"address":"$(SERVICE_NAME).redpanda.unhelm-namespace-placeholder.svc.cluster.local.","name":"internal","port":9093};{"address":"$(SERVICE_NAME)","name":"default","port":31092}'
        - name: ADVERTISED_HTTP_ADDRESSES
          value: '{"address":"$(SERVICE_NAME).redpanda.unhelm-namespace-placeholder.svc.cluster.local.","name":"internal","port":8082};{"address":"$(SERVICE_NAME)","name":"default","port":30082}
            {"address":"$(SERVICE_NAME).redpanda.unhelm-namespace-placeholder.svc.cluster.local.","name":"internal","port":8082};{"address":"$(SERVICE_NAME)","name":"default","port":30082}
            {"address":"$(SERVICE_NAME).redpanda.unhelm-namespace-placeholder.svc.cluster.local.","name":"internal","port":8082};{"address":"$(SERVICE_NAME)","name":"default","port":30082}'
        - name: KUBERNETES_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.12
--
      name: redpanda
    spec:
      containers:
      - args:
        - |
          rpk cluster config import -f /tmp/base-config/bootstrap.yaml --api-urls redpanda-0.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644,redpanda-1.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644,redpanda-2.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644 --admin-api-tls-enabled --admin-api-tls-truststore /etc/tls/certs/default/ca.crt
          rpk cluster config set storage_min_free_bytes 1073741824 --api-urls redpanda-0.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644,redpanda-1.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644,redpanda-2.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9644 --admin-api-tls-enabled --admin-api-tls-truststore /etc/tls/certs/default/ca.crt
        command:
        - /bin/sh
        - -c
        image: docker.redpanda.com/redpandadata/redpanda:v23.1.12
        name: redpanda-post-upgrade
--
    helm.sh/chart: redpanda-4.0.47
  name: redpanda-default-cert
  namespace: unhelm-namespace-replaced
spec:
  dnsNames:
  - redpanda-cluster.redpanda.unhelm-namespace-placeholder.svc.cluster.local
  - redpanda-cluster.redpanda.unhelm-namespace-placeholder.svc
  - redpanda-cluster.redpanda.unhelm-namespace-placeholder
  - '*.redpanda-cluster.redpanda.unhelm-namespace-placeholder.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.unhelm-namespace-placeholder.svc'
  - '*.redpanda-cluster.redpanda.unhelm-namespace-placeholder'
  - redpanda.unhelm-namespace-placeholder.svc.cluster.local
  - redpanda.unhelm-namespace-placeholder.svc
  - redpanda.unhelm-namespace-placeholder
  - '*.redpanda.unhelm-namespace-placeholder.svc.cluster.local'
  - '*.redpanda.unhelm-namespace-placeholder.svc'
  - '*.redpanda.unhelm-namespace-placeholder'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
--
    helm.sh/chart: redpanda-4.0.47
  name: redpanda-external-cert
  namespace: unhelm-namespace-replaced
spec:
  dnsNames:
  - redpanda-cluster.redpanda.unhelm-namespace-placeholder.svc.cluster.local
  - redpanda-cluster.redpanda.unhelm-namespace-placeholder.svc
  - redpanda-cluster.redpanda.unhelm-namespace-placeholder
  - '*.redpanda-cluster.redpanda.unhelm-namespace-placeholder.svc.cluster.local'
  - '*.redpanda-cluster.redpanda.unhelm-namespace-placeholder.svc'
  - '*.redpanda-cluster.redpanda.unhelm-namespace-placeholder'
  - redpanda.unhelm-namespace-placeholder.svc.cluster.local
  - redpanda.unhelm-namespace-placeholder.svc
  - redpanda.unhelm-namespace-placeholder
  - '*.redpanda.unhelm-namespace-placeholder.svc.cluster.local'
  - '*.redpanda.unhelm-namespace-placeholder.svc'
  - '*.redpanda.unhelm-namespace-placeholder'
  duration: 43800h
  isCA: false
  issuerRef:
    group: cert-manager.io
    kind: Issuer
--
    - /usr/bin/timeout
    - "120"
    - bash
    - -c
    - |
      curl -svm3 --fail --retry 120 --retry-max-time 120 --retry-all-errors http://redpanda-console.unhelm-namespace-placeholder.svc:8080/api/cluster
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.12
    name: redpanda
    volumeMounts:
    - mountPath: /tmp/base-config
      name: redpanda
--
    - "120"
    - bash
    - -c
    - |
      until rpk cluster info \
        --brokers redpanda-0.redpanda.unhelm-namespace-placeholder.svc.cluster.local.:9093 \
        --tls-enabled \
        --tls-truststore /etc/tls/certs/default/ca.crt
      do sleep 2
      done
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.12
--
    - -c
    - |
      set -e
    env:
    - name: REDPANDA_BROKERS
      value: redpanda.unhelm-namespace-placeholder.svc.cluster.local:9093
    - name: POD_NAME
      valueFrom:
        fieldRef:
          fieldPath: metadata.name
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.12
--
      NAMESPACE=$(cat ${SERVICEACCOUNT}/namespace)\nexport TOKEN=$(cat ${SERVICEACCOUNT}/token)\nexport
      CACERT=${SERVICEACCOUNT}/ca.crt\n\nip_list=\"\"\n\nreplicas=3\nif [ \"${replicas}\"
      -lt \"1\" ]; then\n  echo \"replicas cannot be less than 1\"\n  exit 1\nfi\n\nrange=$(expr
      $replicas - 1)          \nordinal_list=$(seq 0 $range)\n\nset -e \n\nfor i in
      $ordinal_list\ndo\n  POD_DESC=$(curl --cacert ${CACERT} --header \"Authorization:
      Bearer ${TOKEN}\" \\\n  -X GET ${APISERVER}/api/v1/namespaces/unhelm-namespace-placeholder/pods/redpanda-$i)\n
      \ ip=$(echo $POD_DESC | jq -r .status.hostIP )\n  ip_list=\"$ip $ip_list\"\ndone\n\necho
      test will be run against $ip_list\necho testing NodePort connectivity\n"
    image: mintel/docker-alpine-bash-curl-jq:latest
    name: redpanda
    volumeMounts:
--
  - args:
    - |2

      curl -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors --ssl-reqd \
      --cacert /etc/tls/certs/default/ca.crt \
      https://redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8082/brokers

      curl -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors --ssl-reqd \
      --cacert /etc/tls/certs/default/ca.crt \
      https://redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8082/topics
    command:
    - /bin/bash
    - -c
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.12
    name: redpanda
--
        curl -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors \
        --cacert /etc/tls/certs/default/ca.crt \
        $*
      }

      schemaCurl https://redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8081/subjects

      curl -svm3 --fail --retry "120" --retry-max-time "120" --retry-all-errors \
      -X POST -H 'Content-Type:application/vnd.schemaregistry.v1+json' \
      -d '{"schema": "{\"type\":\"record\",\"name\":\"sensor_sample\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\",\"logicalType\":\"timestamp-millis\"},{\"name\":\"identifier\",\"type\":\"string\",\"logicalType\":\"uuid\"},{\"name\":\"value\",\"type\":\"long\"}]}"}' \
      --cacert /etc/tls/certs/default/ca.crt \
      https://redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8081/subjects/sensor-value/versions

      schemaCurl https://redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8081/schemas/ids/1

      schemaCurl https://redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8081/subjects

      schemaCurl -X DELETE \
      https://redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8081/subjects/sensor-value/versions/1

      schemaCurl -X DELETE \
      https://redpanda.unhelm-namespace-placeholder.svc.cluster.local.:8081/subjects/sensor-value/versions/1?permanent=true
    command:
    - /bin/bash
    - -c
    image: docker.redpanda.com/redpandadata/redpanda:v23.1.12
    name: redpanda
