---
# Source: mimir/templates/store-gateway/store-gateway-statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mimir-store-gateway
  labels:
    helm.sh/chart: mimir-3.0.0
    app.kubernetes.io/name: mimir
    #app.kubernetes.io/instance: unhelm
    app.kubernetes.io/component: store-gateway
    app.kubernetes.io/part-of: memberlist
    app.kubernetes.io/version: "2.2.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    {}
  namespace: "mimir"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir
      #app.kubernetes.io/instance: unhelm
      app.kubernetes.io/component: store-gateway
  updateStrategy:
    type: RollingUpdate
  serviceName: mimir-store-gateway-headless
  volumeClaimTemplates:
    - metadata:
        name: storage
      spec:
        accessModes:
          
          - ReadWriteOnce
        resources:
          requests:
            storage: "2Gi"
  template:
    metadata:
      labels:
        helm.sh/chart: mimir-3.0.0
        app.kubernetes.io/name: mimir
        #app.kubernetes.io/instance: unhelm
        app.kubernetes.io/version: "2.2.0"
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: store-gateway
        app.kubernetes.io/part-of: memberlist
      annotations:
        checksum/config: e98646e3ba178f4d166561786433cc6b1c100156a1586c0111631597308cd798
      namespace: "mimir"
    spec:
      serviceAccountName: mimir
      securityContext:
        {}
      initContainers:
        []
      nodeSelector:
        {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: target
                operator: In
                values:
                - store-gateway
            topologyKey: kubernetes.io/hostname
      tolerations:
        []
      terminationGracePeriodSeconds: 240
      volumes:
        - name: config
          configMap:
            name: mimir-config
            items:
              - key: "mimir.yaml"
                path: "mimir.yaml"
        - name: runtime-config
          configMap:
            name: mimir-runtime
      containers:
        - name: store-gateway
          image: "grafana/mimir:2.2.0"
          imagePullPolicy: IfNotPresent
          args:
            - "-target=store-gateway"
            - "-config.expand-env=true"
            - "-config.file=/etc/mimir/mimir.yaml"
          volumeMounts:
            - name: config
              mountPath: /etc/mimir
            - name: runtime-config
              mountPath: /var/mimir
            - name: storage
              mountPath: "/data"
          ports:
            - name: http-metrics
              containerPort: 8080
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
            - name: memberlist
              containerPort: 7946
              protocol: TCP
          livenessProbe:
            null
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 60
          resources:
            requests:
              cpu: 100m
              memory: 512Mi
          securityContext:
            readOnlyRootFilesystem: true
          env:
          envFrom:
