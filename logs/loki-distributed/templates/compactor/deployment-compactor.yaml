---
# Source: loki/templates/compactor/deployment-compactor.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loki-compactor
  labels:
    helm.sh/chart: loki-0.48.3
    app.kubernetes.io/name: loki
    #app.kubernetes.io/instance: unhelm
    app.kubernetes.io/version: "2.5.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: compactor
spec:
  replicas: 1
  revisionHistoryLimit: 10
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      #app.kubernetes.io/instance: unhelm
      app.kubernetes.io/component: compactor
  template:
    metadata:
      annotations:
        checksum/config: 8c6a537037eb657ef94c0aa05f3c6b1425da091a1caf82f68de927cf2cc9d71a
      labels:
        app.kubernetes.io/name: loki
        #app.kubernetes.io/instance: unhelm
        app.kubernetes.io/component: compactor
    spec:
      serviceAccountName: loki
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 30
      containers:
        - name: compactor
          image: docker.io/grafana/loki:2.5.0
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=compactor
            - -boltdb.shipper.compactor.working-directory=/var/loki/compactor
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          volumeMounts:
            - name: temp
              mountPath: /tmp
            - name: config
              mountPath: /etc/loki/config
            - name: data
              mountPath: /var/loki
          resources:
            {}
      volumes:
        - name: temp
          emptyDir: {}
        - name: config
          configMap:
            name: loki
        - name: data
          emptyDir: {}
