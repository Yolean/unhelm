---
# Source: loki/templates/index-gateway/statefulset-index-gateway.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: loki-index-gateway
  labels:
    helm.sh/chart: loki-0.66.1
    app.kubernetes.io/name: loki
    #app.kubernetes.io/instance: unhelm
    app.kubernetes.io/version: "2.6.1"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: index-gateway
spec:
  replicas: 3
  updateStrategy:
    rollingUpdate:
      partition: 0
  serviceName: loki-index-gateway-headless
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: loki
      #app.kubernetes.io/instance: unhelm
      app.kubernetes.io/component: index-gateway
  template:
    metadata:
      annotations:
        checksum/config: d14cbb74a7c0da2a7d427d1a55e75e706a95cc2d95c1d0114f3bccb564eab241
      labels:
        app.kubernetes.io/name: loki
        #app.kubernetes.io/instance: unhelm
        app.kubernetes.io/component: index-gateway
    spec:
      serviceAccountName: loki
      
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      terminationGracePeriodSeconds: 300
      containers:
        - name: index-gateway
          image: docker.io/grafana/loki:2.6.1
          imagePullPolicy: IfNotPresent
          args:
            - -config.file=/etc/loki/config/config.yaml
            - -target=index-gateway
          ports:
            - name: http
              containerPort: 3100
              protocol: TCP
            - name: grpc
              containerPort: 9095
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /ready
              port: http
            initialDelaySeconds: 300
          volumeMounts:
            - name: config
              mountPath: /etc/loki/config
            - name: runtime-config
              mountPath: /var/loki-runtime
            - name: data
              mountPath: /var/loki
          resources:
            {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: loki
                  #app.kubernetes.io/instance: unhelm
                  app.kubernetes.io/component: index-gateway
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: loki
                    #app.kubernetes.io/instance: unhelm
                    app.kubernetes.io/component: index-gateway
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      volumes:
        - name: config
          configMap:
            name: loki
        - name: runtime-config
          configMap:
            name: loki-runtime
        - name: data
          emptyDir: {}
